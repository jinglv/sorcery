{"remainingRequest":"/Users/lvjing/sorcery/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery/sorcery-front/src/components/Projects/projectDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery/sorcery-front/src/components/Projects/projectDialog.vue","mtime":1683874640881},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1658126181624},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/babel-loader/lib/index.js","mtime":1658126183216},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1658126181624},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1658126185454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldFByb2plY3QsIGNyZWF0ZVByb2plY3QsIHVwZGF0ZVByb2plY3QgfSBmcm9tICdAL2FwaS9wcm9qZWN0cycKaW1wb3J0IHsgdXBsb2FkRmlsZSB9IGZyb20gJ0AvYXBpL3VwbG9hZHMnCgpleHBvcnQgZGVmYXVsdCAoewogIG5hbWU6ICdQb3JqZWN0RGlhbG9nJywKICBjb21wb25lbnRzOiB7fSwKICBwcm9wczogewogICAgdGl0bGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcGlkOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRpYWxvZ1Zpc2libGU6IHRydWUsCiAgICAgIHNob3dUaXRsZTogJycsCiAgICAgIHVwZGF0ZVVSTDogJycsCiAgICAgIHByb2plY3RGb3JtOiB7CiAgICAgICAgLy8g6aG555uu5ZCN56ewCiAgICAgICAgcHJvamVjdE5hbWU6ICcnLAogICAgICAgIC8vIOmhueebruaPj+i/sAogICAgICAgIGRlc2NyaXB0aW9uOiAnJywKICAgICAgICAvLyDkuIrkvKDlm77niYcKICAgICAgICBpbWFnZTogJycKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICBwcm9qZWN0TmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpemhueebrueahOWQjeensCcsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXQogICAgICB9LAogICAgICBmaWxlTGlzdDogW10sIC8vIOeOsOacieWbvueJh+WIl+ihqAogICAgICBpbWFnZVVybDogJycsIC8vIOWbvueJh+i3r+W+hAogICAgICBpbWFnZVZpc2libGU6IGZhbHNlLAogICAgICBkaXNhYmxlZDogZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy50aXRsZSA9PT0gJ2NyZWF0ZScpIHsKICAgICAgdGhpcy5zaG93VGl0bGUgPSAn5Yib5bu66aG555uuJwogICAgfSBlbHNlIGlmICh0aGlzLnRpdGxlID09PSAnZGV0YWlsJykgewogICAgICB0aGlzLnNob3dUaXRsZSA9ICfpobnnm67or6bmg4UnCiAgICAgIHRoaXMuaW5pdFByb2plY3REZXRhaWwoKQogICAgfSBlbHNlIGlmICh0aGlzLnRpdGxlID09PSAnZWRpdCcpIHsKICAgICAgdGhpcy5zaG93VGl0bGUgPSAn57yW6L6R6aG555uuJwogICAgICB0aGlzLmluaXRQcm9qZWN0RGV0YWlsKCkKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIm+W7uumhueebrgogICAgc3VibWl0UHJvamVjdChmb3JtTmFtZSkgewogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGlmICh0aGlzLnRpdGxlID09PSAnY3JlYXRlJykgewogICAgICAgICAgICBjcmVhdGVQcm9qZWN0KHRoaXMucHJvamVjdEZvcm0pLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgICAgICAvLyBjb2Rl77yaJzAwMDAwJ+ihqOekuuaIkOWKnwogICAgICAgICAgICAgIGlmIChyZXNwLmNvZGUgPT09ICcwMDAwMCcpIHsKICAgICAgICAgICAgICAgIC8vIOWIm+W7uuaIkOWKn++8jOWFs+mXreW8ueeqlwogICAgICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZygpCiAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mhueebruWIm+W7uuaIkOWKn++8gScpCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcC5kYXRhKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy50aXRsZSA9PT0gJ2VkaXQnKSB7CiAgICAgICAgICAgIHVwZGF0ZVByb2plY3QodGhpcy5waWQsIHRoaXMucHJvamVjdEZvcm0pLnRoZW4oKHJlc3ApID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcC5jb2RlID09PSAnMDAwMDAnKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKCkKICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn6aG555uu57yW6L6R5oiQ5Yqf77yBJykKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLmRhdGEpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g5qC55o2u6aG555uuSWTmn6Xor6Lpobnnm67or6bmg4UKICAgIGFzeW5jIGluaXRQcm9qZWN0RGV0YWlsKCkgewogICAgICBjb25zdCByZXNwID0gYXdhaXQgZ2V0UHJvamVjdCh0aGlzLnBpZCkKICAgICAgaWYgKHJlc3AuY29kZSA9PT0gJzAwMDAwJykgewogICAgICAgIHRoaXMucHJvamVjdEZvcm0gPSByZXNwLmRhdGEKICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goewogICAgICAgICAgbmFtZTogcmVzcC5kYXRhLmltYWdlLAogICAgICAgICAgdXJsOiByZXNwLmRhdGEuaW1hZ2UKICAgICAgICB9KQogICAgICAgIHRoaXMuaW1hZ2VVcmwgPSByZXNwLmRhdGEuaW1hZ2UKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+mhueebruivpuaDheaIkOWKn++8gScpCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6aG555uu6K+m5oOF5aSx6LSl77yBJykKICAgICAgfQogICAgfSwKICAgIC8vIOWIoOmZpOWbvueJhwogICAgaGFuZGxlUmVtb3ZlKGZpbGUpIHsKICAgICAgY29uc29sZS5sb2coJ+WIoOmZpCcsIGZpbGUpCiAgICB9LAogICAgLy8g6aKE6KeI5Zu+54mHCiAgICBoYW5kbGVQcmV2aWV3KGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGNvbnNvbGUubG9nKCfkuIrkvKDmiJDlip8nLCBmaWxlLCBmaWxlTGlzdCkKICAgICAgdGhpcy5pbWFnZVVybCA9IGZpbGUudXJsCiAgICAgIHRoaXMuaW1hZ2VWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIC8vIOS4iuS8oOaWh+S7tgogICAgYXN5bmMgYmVmb3JlVXBsb2FkKGZpbGUpIHsKICAgICAgY29uc29sZS5sb2coJ+S4iuS8oOaWh+S7tuWvueixoScsIGZpbGUpCiAgICAgIGNvbnN0IGZiID0gbmV3IEZvcm1EYXRhKCkKICAgICAgZmIuYXBwZW5kKCdmaWxlJywgZmlsZSkKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IHVwbG9hZEZpbGUoZmIpCiAgICAgIGNvbnNvbGUubG9nKCdyZXNwLS0+JywgcmVzcCkKICAgICAgaWYgKHJlc3AuY29kZSA9PT0gJzAwMDAwJykgewogICAgICAgIC8vIOiOt+WPluaWh+S7tuWQjQogICAgICAgIHRoaXMucHJvamVjdEZvcm0uaW1hZ2UgPSByZXNwLmRhdGEKICAgICAgICAvLyDmi7zmjqXpnZnmgIHmlofku7bot6/lvoTvvIznlKjkuo7lm77niYflsZXnpLoKICAgICAgICBjb25zdCBpbWFnZVBhdGggPSByZXNwLmRhdGEKICAgICAgICBjb25zdCBpbWFnZUluZm8gPSB7CiAgICAgICAgICBuYW1lOiBmaWxlLm5hbWUsCiAgICAgICAgICB1cmw6IGltYWdlUGF0aAogICAgICAgIH0KICAgICAgICB0aGlzLmZpbGVMaXN0LnB1c2goaW1hZ2VJbmZvKQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5LiK5Lyg5oiQ5Yqf77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmxvZygn5LiK5Lyg5aSx6LSlJywgcmVzcCkKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3AuZXJyb3IubWVzc2FnZSkKICAgICAgfQogICAgfSwKICAgIC8vIOWFs+mXree7hOS7tgogICAgY2xvc2VEaWFsb2coKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NhbmNlbCcsIHt9KQogICAgfSwKICAgIC8vIOimhueblum7mOiupOeahOS4iuS8oOihjOS4uu+8jOWPr+S7peiHquWumuS5ieS4iuS8oOeahOWunueOsO+8jOmBv+WFjeS9v+eUqOahhuaetuiHquWKqOS4iuS8oOWKn+iDvQogICAgaHR0cFJlcXVlc3QoKSB7fQogIH0KfSkK"},{"version":3,"sources":["projectDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"projectDialog.vue","sourceRoot":"src/components/Projects","sourcesContent":["<template>\n  <el-dialog\n    :title=\"showTitle\"\n    :visible.sync=\"dialogVisible\"\n    width=\"500px\"\n    :before-close=\"closeDialog\"\n  >\n    <el-form\n      v-if=\"title == 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"projectName\">{{ projectForm.projectName }}</el-form-item>\n      <el-form-item label=\"项目描述\" prop=\"description\">{{ projectForm.description }}</el-form-item>\n      <el-form-item label=\"图片\" prop=\"image\">\n        <div id=\"image\">\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"imageUrl\"\n          />\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">返回</el-button>\n      </el-form-item>\n    </el-form>\n    <el-form\n      v-if=\"title != 'detail'\"\n      ref=\"ruleForm\"\n      :model=\"projectForm\"\n      :rules=\"rules\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"项目名称\" prop=\"name\">\n        <el-input v-model=\"projectForm.projectName\" />\n      </el-form-item>\n      <el-form-item label=\"项目描述\" prop=\"desc\">\n        <el-input v-model=\"projectForm.description\" type=\"textarea\" />\n      </el-form-item>\n      <el-form-item label=\"图片\" prop=\"desc\">\n        <div id=\"image\">\n          <el-upload\n            action=\"#\"\n            :before-upload=\"beforeUpload\"\n            :http-request=\"httpRequest\"\n            list-type=\"picture-card\"\n            :on-preview=\"handlePreview\"\n            :on-remove=\"handleRemove\"\n            :file-list=\"fileList\"\n          >\n            <i class=\"el-icon-plus\" />\n          </el-upload>\n          <el-dialog :visible.sync=\"imageVisible\">\n            <img width=\"100%\" :src=\"imageUrl\" alt=\"\">\n          </el-dialog>\n        </div>\n      </el-form-item>\n      <el-form-item style=\"text-align: right\">\n        <el-button @click=\"closeDialog\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"submitProject('ruleForm')\"\n        >确定</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport { getProject, createProject, updateProject } from '@/api/projects'\nimport { uploadFile } from '@/api/uploads'\n\nexport default ({\n  name: 'PorjectDialog',\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: null\n    },\n    pid: {\n      type: Number,\n      default: 1\n    }\n  },\n  data() {\n    return {\n      dialogVisible: true,\n      showTitle: '',\n      updateURL: '',\n      projectForm: {\n        // 项目名称\n        projectName: '',\n        // 项目描述\n        description: '',\n        // 上传图片\n        image: ''\n      },\n      rules: {\n        projectName: [\n          { required: true, message: '请输入项目的名称', trigger: 'blur' }\n        ]\n      },\n      fileList: [], // 现有图片列表\n      imageUrl: '', // 图片路径\n      imageVisible: false,\n      disabled: false\n    }\n  },\n  mounted() {\n    if (this.title === 'create') {\n      this.showTitle = '创建项目'\n    } else if (this.title === 'detail') {\n      this.showTitle = '项目详情'\n      this.initProjectDetail()\n    } else if (this.title === 'edit') {\n      this.showTitle = '编辑项目'\n      this.initProjectDetail()\n    }\n  },\n  methods: {\n    // 创建项目\n    submitProject(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          if (this.title === 'create') {\n            createProject(this.projectForm).then((resp) => {\n              // code：'00000'表示成功\n              if (resp.code === '00000') {\n                // 创建成功，关闭弹窗\n                this.closeDialog()\n                this.$message.success('项目创建成功！')\n              } else {\n                this.$message.error(resp.data)\n              }\n            })\n          } else if (this.title === 'edit') {\n            updateProject(this.pid, this.projectForm).then((resp) => {\n              if (resp.code === '00000') {\n                this.closeDialog()\n                this.$message.success('项目编辑成功！')\n              } else {\n                this.$message.error(resp.error.data)\n              }\n            })\n          }\n        } else {\n          return false\n        }\n      })\n    },\n    // 根据项目Id查询项目详情\n    async initProjectDetail() {\n      const resp = await getProject(this.pid)\n      if (resp.code === '00000') {\n        this.projectForm = resp.data\n        this.fileList.push({\n          name: resp.data.image,\n          url: resp.data.image\n        })\n        this.imageUrl = resp.data.image\n        this.$message.success('项目详情成功！')\n      } else {\n        this.$message.error('项目详情失败！')\n      }\n    },\n    // 删除图片\n    handleRemove(file) {\n      console.log('删除', file)\n    },\n    // 预览图片\n    handlePreview(file, fileList) {\n      console.log('上传成功', file, fileList)\n      this.imageUrl = file.url\n      this.imageVisible = true\n    },\n    // 上传文件\n    async beforeUpload(file) {\n      console.log('上传文件对象', file)\n      const fb = new FormData()\n      fb.append('file', file)\n      const resp = await uploadFile(fb)\n      console.log('resp-->', resp)\n      if (resp.code === '00000') {\n        // 获取文件名\n        this.projectForm.image = resp.data\n        // 拼接静态文件路径，用于图片展示\n        const imagePath = resp.data\n        const imageInfo = {\n          name: file.name,\n          url: imagePath\n        }\n        this.fileList.push(imageInfo)\n        this.$message.success('上传成功！')\n      } else {\n        console.log('上传失败', resp)\n        this.$message.error(resp.error.message)\n      }\n    },\n    // 关闭组件\n    closeDialog() {\n      this.$emit('cancel', {})\n    },\n    // 覆盖默认的上传行为，可以自定义上传的实现，避免使用框架自动上传功能\n    httpRequest() {}\n  }\n})\n</script>\n"]}]}