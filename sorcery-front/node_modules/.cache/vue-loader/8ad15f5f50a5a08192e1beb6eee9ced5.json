{"remainingRequest":"/Users/lvjing/sorcery/sorcery-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lvjing/sorcery/sorcery-front/src/views/apis/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lvjing/sorcery/sorcery-front/src/views/apis/index.vue","mtime":1710316027417},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1658126181624},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/babel-loader/lib/index.js","mtime":1658126183216},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/cache-loader/dist/cjs.js","mtime":1658126181624},{"path":"/Users/lvjing/sorcery/sorcery-front/node_modules/vue-loader/lib/index.js","mtime":1658126185454}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNb2R1bGVEaWFsb2cgZnJvbSAnQC92aWV3cy9hcGlzL2NvbXBvbmVudHMvbW9kdWxlRGlhbG9nLnZ1ZScKaW1wb3J0IHsgcHJvamVjdEFsbExpc3QgfSBmcm9tICdAL2FwaS9wcm9qZWN0cycKaW1wb3J0IHsgYXBpTGlzdEJ5TW9kdWxlSWQsIGRlbGV0ZUFwaUluZm8gfSBmcm9tICdAL2FwaS9hcGlzJwppbXBvcnQgeyBnZXRNb2R1bGVUcmVlLCBkZWxldGVNb2R1bGUgfSBmcm9tICdAL2FwaS9tb2R1bGVzJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBcGlzTW9kdWxlJywKICBjb21wb25lbnRzOiB7CiAgICBNb2R1bGVEaWFsb2cKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwcm9qZWN0VmFsdWU6IDEsCiAgICAgIHByb2plY3RMYWJlbDogJycsCiAgICAgIHJvb3RGbGFnOiB0cnVlLAogICAgICBwcm9qZWN0T3B0aW9uOiBbXSwKICAgICAgbW9kdWxlRGF0YTogW10sCiAgICAgIGRpYWxvZ0ZsYWc6IGZhbHNlLAogICAgICBwYXJlbnRPYmo6IHt9LAogICAgICBhcGlEYXRhOiBbXSwKICAgICAgYXBpU2VhcmNoRnJvbTogewogICAgICAgIGFwaU5hbWU6ICcnCiAgICAgIH0sCiAgICAgIGRyYXdlcjogZmFsc2UsCiAgICAgIGNhc2VUaXRsZTogJycsCiAgICAgIGN1cnJlbnRNb2R1bGU6IDAsIC8vIOW9k+WJjemAieS4reeahOaooeWdlwogICAgICBjdXJyZW50Q2FzZTogMCwgLy8g5b2T5YmN6YCJ5Lit55qE55So5L6LCiAgICAgIGRpYWxvZ0VudnNGbGFnOiBmYWxzZSwKICAgICAgcmVxOiB7CiAgICAgICAgcGFnZU51bTogMSwKICAgICAgICBwYWdlU2l6ZTogMTAKICAgICAgfSwKICAgICAgLy8g5YiG6aG16aG15pWwCiAgICAgIHRvdGFsOiAxMCwKICAgICAgY29uaGVpZ2h0OiB7CiAgICAgICAgaGVpZ2h0OiAnJwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pbml0UHJvamVjdEFsbExpc3QoKQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmdldEhlaWdodCkKICAgIHRoaXMuZ2V0SGVpZ2h0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOiuvue9ruWNoeeJh+mrmOW6puiHqumAguW6lGVsLWNhcmQKICAgIGdldEhlaWdodCgpIHsKICAgICAgdGhpcy5jb25oZWlnaHQuaGVpZ2h0ID0gd2luZG93LmlubmVySGVpZ2h0IC0gMTcwICsgJ3B4JwogICAgfSwKICAgIC8vIOWIneWni+WMlumhueebruWIl+ihqAogICAgYXN5bmMgaW5pdFByb2plY3RBbGxMaXN0KCkgewogICAgICBjb25zdCByZXNwID0gYXdhaXQgcHJvamVjdEFsbExpc3QoKQogICAgICBpZiAocmVzcC5jb2RlID09PSAnMDAwMDAnKSB7CiAgICAgICAgdGhpcy5wcm9qZWN0VmFsdWUgPSByZXNwLmRhdGFbMF0uaWQKICAgICAgICB0aGlzLnByb2plY3RMYWJlbCA9IHJlc3AuZGF0YVswXS5wcm9qZWN0TmFtZQogICAgICAgIC8vIOWcqOWIneWni+WMlumhueebruS/oeaBr++8jOWQjOaXtuWIneWni+WMlumhueebruS4i+eahOaooeWdl+S/oeaBrwogICAgICAgIHRoaXMuaW5pdE1vZHVsZUxpc3QodGhpcy5wcm9qZWN0VmFsdWUpCiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZXNwLmRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHRoaXMucHJvamVjdE9wdGlvbi5wdXNoKHsKICAgICAgICAgICAgdmFsdWU6IHJlc3AuZGF0YVtpXS5pZCwKICAgICAgICAgICAgbGFiZWw6IHJlc3AuZGF0YVtpXS5wcm9qZWN0TmFtZQogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgLy8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLmn6Xor6LmiJDlip/vvIEiKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+afpeivouWksei0pe+8gScpCiAgICAgIH0KICAgIH0sCiAgICAvLyDkv67mlLnpgInkuK3pobnnm64KICAgIGNoYW5nZVByb2plY3QodmFsdWUpIHsKICAgICAgdGhpcy5wcm9qZWN0VmFsdWUgPSB2YWx1ZQogICAgICB0aGlzLnByb2plY3RMYWJlbCA9IHRoaXMucHJvamVjdE9wdGlvbi5maW5kKAogICAgICAgIChpdGVtKSA9PiBpdGVtLnZhbHVlID09PSB2YWx1ZQogICAgICApLmxhYmVsCiAgICAgIHRoaXMuaW5pdE1vZHVsZUxpc3QodmFsdWUpCiAgICB9LAogICAgLy8g5p+l6K+i5qih5Z2X5YiX6KGoCiAgICBhc3luYyBpbml0TW9kdWxlTGlzdChwaWQpIHsKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGdldE1vZHVsZVRyZWUocGlkKQogICAgICBpZiAocmVzcC5jb2RlID09PSAnMDAwMDAnKSB7CiAgICAgICAgdGhpcy5tb2R1bGVEYXRhID0gcmVzcC5kYXRhCiAgICAgICAgLy8gdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLmn6Xor6LmiJDlip/vvIEiKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+afpeivouWksei0pe+8gScpCiAgICAgIH0KICAgIH0sCiAgICAvLyDliJvlu7rmqKHlnZflrZDoioLngrkKICAgIGFwcGVuZChkYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKCfliJvlu7rlrZDoioLngrknLCBkYXRhKQogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSB0cnVlCiAgICAgIHRoaXMucm9vdEZsYWcgPSBmYWxzZQogICAgICB0aGlzLnBhcmVudE9iaiA9IGRhdGEKICAgIH0sCiAgICAvLyDliKDpmaTmqKHlnZcKICAgIHJlbW92ZShub2RlLCBkYXRhKSB7CiAgICAgIGRlbGV0ZU1vZHVsZShkYXRhLmlkKS50aGVuKChyZXNwKSA9PiB7CiAgICAgICAgaWYgKHJlc3AuY29kZSA9PT0gJzAwMDAwJykgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTmiJDlip/vvIEnKQogICAgICAgICAgdGhpcy5pbml0TW9kdWxlTGlzdCh0aGlzLnByb2plY3RWYWx1ZSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLm1zZykKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgLy8g5Yib5bu65qih5Z2XCiAgICBjcmVhdGVSb290TW9kdWxlKCkgewogICAgICB0aGlzLmRpYWxvZ0ZsYWcgPSB0cnVlCiAgICAgIHRoaXMucm9vdEZsYWcgPSB0cnVlCiAgICB9LAogICAgLy8g5Yib5bu65qih5Z2X5YWz6ZetCiAgICBjbG9zZURpYWxvZygpIHsKICAgICAgdGhpcy5kaWFsb2dGbGFnID0gZmFsc2UKICAgICAgdGhpcy5pbml0TW9kdWxlTGlzdCh0aGlzLnByb2plY3RWYWx1ZSkKICAgIH0sCiAgICBub2RlQ2xpY2soZGF0YSkgewogICAgICB0aGlzLmN1cnJlbnRNb2R1bGUgPSBkYXRhLmlkCiAgICAgIHRoaXMuZ2V0QXBpTGlzdChkYXRhLmlkKQogICAgfSwKICAgIC8vIOiOt+WPluaooeWdl+S4i+eahOa1i+ivleeUqOS+i+WIl+ihqAogICAgYXN5bmMgZ2V0QXBpTGlzdChtaWQpIHsKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IGFwaUxpc3RCeU1vZHVsZUlkKG1pZCwgdGhpcy5yZXEsIEpTT04uc3RyaW5naWZ5KHRoaXMuYXBpU2VhcmNoRnJvbSkpCiAgICAgIGlmIChyZXNwLmNvZGUgPT09ICcwMDAwMCcpIHsKICAgICAgICB0aGlzLmFwaURhdGEgPSByZXNwLmRhdGEubGlzdAogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5p+l6K+i5oiQ5Yqf77yBJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfmn6Xor6LlpLHotKXvvIEnKQogICAgICB9CiAgICB9LAogICAgLy8g5Yib5bu65rWL6K+V55So5L6LCiAgICBjcmVhdGVDYXNlKCkgewogICAgICBpZiAodGhpcy5jdXJyZW50TW9kdWxlID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fpgInmi6nmqKHlnZchJykKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmN1cnJlbnRDYXNlID0gMAogICAgICAgIHRoaXMuZHJhd2VyID0gdHJ1ZQogICAgICAgIHRoaXMuY2FzZVRpdGxlID0gJ+WIm+W7uuaOpeWPoycKICAgICAgfQogICAgfSwKICAgIC8vIOafpeeci+eUqOS+i+ivpuaDhQogICAgY2FzZVJvd0FwaUluZm8ocm93KSB7CiAgICAgIC8vIOeCueWHu+eUqOS+i++8jOiOt+WPlueUqOS+i2lkCiAgICAgIHRoaXMuY3VycmVudENhc2UgPSByb3cuaWQKICAgICAgdGhpcy5kcmF3ZXIgPSB0cnVlCiAgICAgIHRoaXMuY2FzZVRpdGxlID0gJ+aOpeWPo+ivpuaDhScKICAgIH0sCiAgICAvLyDnvJbovpHmtYvor5XnlKjkvosKICAgIGVkaXRSb3dBcGlJbmZvKHJvdykgewogICAgICAvLyDngrnlh7vnlKjkvovvvIzojrflj5bnlKjkvotpZAogICAgICB0aGlzLmN1cnJlbnRDYXNlID0gcm93LmlkCiAgICAgIHRoaXMuZHJhd2VyID0gdHJ1ZQogICAgICB0aGlzLmNhc2VUaXRsZSA9ICfnvJbovpHmjqXlj6MnCiAgICB9LAogICAgLy8g5Yig6Zmk5rWL6K+V55So5L6LCiAgICBkZWxldGVSb3dBcGlJbmZvKHJvdykgewogICAgICAvLyDngrnlh7vnlKjkvovvvIzojrflj5bnlKjkvotpZAogICAgICB0aGlzLmN1cnJlbnRDYXNlID0gcm93LmlkCiAgICAgIHRoaXMuJGNvbmZpcm0oJ+WIoOmZpOaOpeWPoywg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICBjZW50ZXI6IHRydWUKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgY29uc3QgcmVzcCA9IGRlbGV0ZUFwaUluZm8odGhpcy5jdXJyZW50Q2FzZSkKICAgICAgICBpZiAocmVzcC5zdWNjZXNzID09PSB0cnVlKSB7CiAgICAgICAgICB0aGlzLmdldENhc2VMaXN0KHRoaXMuY3VycmVudE1vZHVsZSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwLmVycm9yLm1zZykKICAgICAgICB9CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICBtZXNzYWdlOiAn5Yig6Zmk5oiQ5YqfIScKICAgICAgICB9KQogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAnaW5mbycsCiAgICAgICAgICBtZXNzYWdlOiAn5bey5Y+W5raI5Yig6ZmkJwogICAgICAgIH0pCiAgICAgIH0pCiAgICB9LAogICAgLy8g6Lez6L2s5Yiw56ys5Yeg6aG1CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICBjb25zb2xlLmxvZyhg5b2T5YmN6aG1OiAke3ZhbH1gKQogICAgICB0aGlzLnJlcS5wYWdlTnVtID0gdmFsCiAgICAgIHRoaXMuZ2V0Q2FzZUxpc3QodGhpcy5jdXJyZW50TW9kdWxlKQogICAgfSwKICAgIC8vIOS8oOmAkuWtkOe7hOS7tu+8jOWFs+mXreaKveWxiQogICAgY2xvc2VEcmF3ZXIoKSB7CiAgICAgIHRoaXMuZHJhd2VyID0gZmFsc2UKICAgIH0sCiAgICAvLyDkvKDpgJLlrZDnu4Tku7bvvIzlhbPpl63mir3lsYnvvIzliLfmlrDliJfooagKICAgIHJlZnJlc2hDYXNlTGlzdCgpIHsKICAgICAgY29uc29sZS5pbmZvKCdjdXJyZW50TW9kdWxlJywgdGhpcy5jdXJyZW50TW9kdWxlKQogICAgICB0aGlzLmdldENhc2VMaXN0KHRoaXMuY3VycmVudE1vZHVsZSkKICAgIH0sCiAgICAvLyDliJvlu7rmqKHlnZcKICAgIGNyZWF0ZUVudigpIHsKICAgICAgdGhpcy5kaWFsb2dFbnZzRmxhZyA9IHRydWUKICAgIH0sCiAgICAvLyDliJvlu7rmqKHlnZflhbPpl60KICAgIGNsb3NlRW52RGlhbG9nKCkgewogICAgICB0aGlzLmRpYWxvZ0VudnNGbGFnID0gZmFsc2UKICAgICAgdGhpcy5pbml0TW9kdWxlTGlzdCh0aGlzLnByb2plY3RWYWx1ZSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/apis","sourcesContent":["<template>\n  <div class=\"api-manage\">\n    <div style=\"text-align: left; margin-top: 10px;\">\n      <el-form :inline=\"true\">\n        <el-form-item label=\"项目:\">\n          <el-select\n            v-model=\"projectValue\"\n            placeholder=\"请选择项目\"\n            @change=\"changeProject\"\n          >\n            <el-option\n              v-for=\"item in projectOption\"\n              :key=\"item.value\"\n              :label=\"item.label\"\n              :value=\"item.value\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item style=\"float: right\">\n          <el-button type=\"primary\" size=\"medium\" @click=\"createCase()\">创建接口</el-button>\n        </el-form-item>\n        <el-form-item style=\"float: right\">\n          <el-button type=\"primary\" size=\"medium\" style=\"margin-left: 35px\" @click=\"createEnv()\">配置环境变量</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <div style=\"margin-top: 10px\">\n      <el-card style=\"width: 25%; float: left\" class=\"box-card card-height\" :style=\"conheight\">\n        <el-button\n          class=\"label-title\"\n          type=\"text\"\n          icon=\"el-icon-circle-plus-outline\"\n          @click=\"createRootModule\"\n        >{{ projectLabel }}-模块</el-button>\n        <el-tree\n          :data=\"moduleData\"\n          show-checkbox\n          node-key=\"id\"\n          default-expand-all\n          :expand-on-click-node=\"false\"\n          @node-click=\"nodeClick\"\n        >\n          <span slot-scope=\"{ node, data }\" class=\"custom-tree-node\">\n            <span class=\"label-text\">{{ node.label }}</span>\n            <span style=\"float: right\">\n              <el-button type=\"text\" @click=\"() => append(data)\">\n                <i class=\"el-icon-circle-plus-outline\" />\n              </el-button>\n              <el-button\n                type=\"text\"\n                @click=\"() => remove(node, data)\"\n              >\n                <i class=\"el-icon-delete\" />\n              </el-button>\n            </span>\n          </span>\n        </el-tree>\n      </el-card>\n      <div style=\"width: 74%; float: right\">\n        <el-table\n          :data=\"apiData\"\n          border\n          style=\"width: 100%\"\n        >\n          <el-table-column prop=\"id\" label=\"用例ID\" width=\"100\" />\n          <el-table-column prop=\"apiName\" label=\"用例名称\" width=\"auto\" />\n          <el-table-column prop=\"method\" label=\"请求方法\" width=\"auto\" />\n          <el-table-column prop=\"apiPath\" label=\"API Path\" width=\"auto\" />\n          <el-table-column prop=\"createTime\" label=\"创建时间\" width=\"auto\" />\n          <el-table-column fixed=\"right\" label=\"操作\">\n            <template slot-scope=\"scope\">\n              <el-button\n                type=\"text\"\n                @click=\"caseRowApiInfo(scope.row)\"\n              >查看</el-button>\n              <el-button\n                type=\"text\"\n                @click=\"editRowApiInfo(scope.row)\"\n              >编辑</el-button>\n              <el-button\n                type=\"text\"\n                @click=\"deleteRowApiInfo(scope.row)\"\n              >删除</el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n        <!--分页-->\n        <div style=\"width: 100%; text-align: right\">\n          <el-pagination\n            background\n            :total=\"total\"\n            :page-size=\"req.pageSize\"\n            layout=\"total, prev, pager, next\"\n            @current-change=\"handleCurrentChange\"\n          />\n        </div>\n        <!-- 创建模块 -->\n        <module-dialog\n          v-if=\"dialogFlag\"\n          :pid=\"projectValue\"\n          :plabel=\"projectLabel\"\n          :root-id=\"rootFlag\"\n          :parent-obj=\"parentObj\"\n          @cancel=\"closeDialog\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ModuleDialog from '@/views/apis/components/moduleDialog.vue'\nimport { projectAllList } from '@/api/projects'\nimport { apiListByModuleId, deleteApiInfo } from '@/api/apis'\nimport { getModuleTree, deleteModule } from '@/api/modules'\n\nexport default {\n  name: 'ApisModule',\n  components: {\n    ModuleDialog\n  },\n  data() {\n    return {\n      projectValue: 1,\n      projectLabel: '',\n      rootFlag: true,\n      projectOption: [],\n      moduleData: [],\n      dialogFlag: false,\n      parentObj: {},\n      apiData: [],\n      apiSearchFrom: {\n        apiName: ''\n      },\n      drawer: false,\n      caseTitle: '',\n      currentModule: 0, // 当前选中的模块\n      currentCase: 0, // 当前选中的用例\n      dialogEnvsFlag: false,\n      req: {\n        pageNum: 1,\n        pageSize: 10\n      },\n      // 分页页数\n      total: 10,\n      conheight: {\n        height: ''\n      }\n    }\n  },\n  mounted() {\n    this.initProjectAllList()\n  },\n  created() {\n    window.addEventListener('resize', this.getHeight)\n    this.getHeight()\n  },\n  methods: {\n    // 设置卡片高度自适应el-card\n    getHeight() {\n      this.conheight.height = window.innerHeight - 170 + 'px'\n    },\n    // 初始化项目列表\n    async initProjectAllList() {\n      const resp = await projectAllList()\n      if (resp.code === '00000') {\n        this.projectValue = resp.data[0].id\n        this.projectLabel = resp.data[0].projectName\n        // 在初始化项目信息，同时初始化项目下的模块信息\n        this.initModuleList(this.projectValue)\n        for (let i = 0; i < resp.data.length; i++) {\n          this.projectOption.push({\n            value: resp.data[i].id,\n            label: resp.data[i].projectName\n          })\n        }\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 修改选中项目\n    changeProject(value) {\n      this.projectValue = value\n      this.projectLabel = this.projectOption.find(\n        (item) => item.value === value\n      ).label\n      this.initModuleList(value)\n    },\n    // 查询模块列表\n    async initModuleList(pid) {\n      const resp = await getModuleTree(pid)\n      if (resp.code === '00000') {\n        this.moduleData = resp.data\n        // this.$message.success(\"查询成功！\")\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 创建模块子节点\n    append(data) {\n      console.log('创建子节点', data)\n      this.dialogFlag = true\n      this.rootFlag = false\n      this.parentObj = data\n    },\n    // 删除模块\n    remove(node, data) {\n      deleteModule(data.id).then((resp) => {\n        if (resp.code === '00000') {\n          this.$message.success('删除成功！')\n          this.initModuleList(this.projectValue)\n        } else {\n          this.$message.error(resp.msg)\n        }\n      })\n    },\n    // 创建模块\n    createRootModule() {\n      this.dialogFlag = true\n      this.rootFlag = true\n    },\n    // 创建模块关闭\n    closeDialog() {\n      this.dialogFlag = false\n      this.initModuleList(this.projectValue)\n    },\n    nodeClick(data) {\n      this.currentModule = data.id\n      this.getApiList(data.id)\n    },\n    // 获取模块下的测试用例列表\n    async getApiList(mid) {\n      const resp = await apiListByModuleId(mid, this.req, JSON.stringify(this.apiSearchFrom))\n      if (resp.code === '00000') {\n        this.apiData = resp.data.list\n        this.$message.success('查询成功！')\n      } else {\n        this.$message.error('查询失败！')\n      }\n    },\n    // 创建测试用例\n    createCase() {\n      if (this.currentModule === 0) {\n        this.$message.warning('请选择模块!')\n      } else {\n        this.currentCase = 0\n        this.drawer = true\n        this.caseTitle = '创建接口'\n      }\n    },\n    // 查看用例详情\n    caseRowApiInfo(row) {\n      // 点击用例，获取用例id\n      this.currentCase = row.id\n      this.drawer = true\n      this.caseTitle = '接口详情'\n    },\n    // 编辑测试用例\n    editRowApiInfo(row) {\n      // 点击用例，获取用例id\n      this.currentCase = row.id\n      this.drawer = true\n      this.caseTitle = '编辑接口'\n    },\n    // 删除测试用例\n    deleteRowApiInfo(row) {\n      // 点击用例，获取用例id\n      this.currentCase = row.id\n      this.$confirm('删除接口, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        center: true\n      }).then(() => {\n        const resp = deleteApiInfo(this.currentCase)\n        if (resp.success === true) {\n          this.getCaseList(this.currentModule)\n        } else {\n          this.$message.error(resp.error.msg)\n        }\n        this.$message({\n          type: 'success',\n          message: '删除成功!'\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    // 跳转到第几页\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`)\n      this.req.pageNum = val\n      this.getCaseList(this.currentModule)\n    },\n    // 传递子组件，关闭抽屉\n    closeDrawer() {\n      this.drawer = false\n    },\n    // 传递子组件，关闭抽屉，刷新列表\n    refreshCaseList() {\n      console.info('currentModule', this.currentModule)\n      this.getCaseList(this.currentModule)\n    },\n    // 创建模块\n    createEnv() {\n      this.dialogEnvsFlag = true\n    },\n    // 创建模块关闭\n    closeEnvDialog() {\n      this.dialogEnvsFlag = false\n      this.initModuleList(this.projectValue)\n    }\n  }\n}\n</script>\n<style scoped>\n.custom-tree-node {\n  width: 100%;\n}\n.label-title {\n  font-family: \"Liberation Mono\", monospace, serif, sans-serif;\n  font-size: 20px;\n}\n.label-text {\n  font-family: \"Lucida Calligraphy\", cursive, serif, sans-serif;\n  font-size: 18px;\n  font-weight: bolder;\n  float: left;\n  margin-top: 5px;\n}\n</style>\n"]}]}